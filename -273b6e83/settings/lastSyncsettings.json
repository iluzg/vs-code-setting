{"ref":"7d1c1950-33af-45a3-9813-a93063bb88b3","syncData":{"version":2,"machineId":"7239018e-e0a5-4991-a598-23f666718209","content":"{\"settings\":\"{\\r\\n  \\\"files.watcherExclude\\\": {\\r\\n    \\\"**/.git/objects/**\\\": true,\\r\\n    \\\"**/node_modules/**\\\": true\\r\\n  },\\r\\n  \\\"git.enableSmartCommit\\\": true,\\r\\n  \\\"git.mergeEditor\\\": true,\\r\\n  \\\"editor.suggestSelection\\\": \\\"first\\\",\\r\\n  \\\"editor.codeActionsOnSave\\\": {\\r\\n    \\\"source.organizeImports\\\": \\\"explicit\\\"\\r\\n  },\\r\\n  \\\"diffEditor.experimental.useVersion2\\\": true,\\r\\n  \\\"vsintellicode.modify.editor.suggestSelection\\\": \\\"automaticallyOverrodeDefaultValue\\\",\\r\\n  \\\"yaml.schemas\\\": {\\r\\n    \\\"file:///home/guy/.vscode/extensions/atlassian.atlascode-3.0.2/resources/schemas/pipelines-schema.json\\\": \\\"bitbucket-pipelines.yml\\\"\\r\\n  },\\r\\n  \\\"[javascript]\\\": {\\r\\n    \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\r\\n  },\\r\\n  \\\"[json]\\\": {\\r\\n    \\\"editor.defaultFormatter\\\": \\\"vscode.json-language-features\\\"\\r\\n  },\\r\\n  \\\"editor.peekWidgetDefaultFocus\\\": \\\"editor\\\",\\r\\n\\r\\n  \\\"workbench.colorCustomizations\\\": {\\r\\n    \\\"tab.activeBorder\\\": \\\"#07ff0f\\\",\\r\\n    \\\"tab.unfocusedActiveBorder\\\": \\\"#000000\\\"\\r\\n  },\\r\\n\\r\\n  \\\"editor.formatOnSave\\\": true,\\r\\n  \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\",\\r\\n  \\\"atlascode.jira.jqlList\\\": [\\r\\n    {\\r\\n      \\\"id\\\": \\\"ec3a7853-bcc4-41a2-b27c-e152f3ca32cf\\\",\\r\\n      \\\"siteId\\\": \\\"f6fe748a-274c-42d6-a701-eeb20cb6d0a7\\\",\\r\\n      \\\"name\\\": \\\"In Progress\\\",\\r\\n      \\\"query\\\": \\\"assignee = status = \\\\\\\"In Progress\\\\\\\"\\\",\\r\\n      \\\"enabled\\\": true,\\r\\n      \\\"monitor\\\": true\\r\\n    },\\r\\n    {\\r\\n      \\\"id\\\": \\\"a54f1683-37f7-4b79-affc-65c0bc903838\\\",\\r\\n      \\\"enabled\\\": true,\\r\\n      \\\"name\\\": \\\"My team82 Issues\\\",\\r\\n      \\\"query\\\": \\\"assignee = currentUser() AND resolution = Unresolved ORDER BY lastViewed DESC\\\",\\r\\n      \\\"siteId\\\": \\\"f6fe748a-274c-42d6-a701-eeb20cb6d0a7\\\",\\r\\n      \\\"monitor\\\": true\\r\\n    }\\r\\n  ],\\r\\n  \\\"editor.lineNumbers\\\": \\\"on\\\",\\r\\n  \\\"vim.useSystemClipboard\\\": true,\\r\\n  \\\"vim.leader\\\": \\\"<space>\\\",\\r\\n\\r\\n  \\\"vim.normalModeKeyBindings\\\": [\\r\\n    { \\\"before\\\": [\\\"leader\\\", \\\"p\\\"], \\\"after\\\": [\\\"c\\\", \\\"w\\\", \\\"j\\\", \\\"k\\\", \\\"p\\\"] },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"U\\\"],\\r\\n      \\\"commands\\\": [\\\"extension.vim_ctrl+r\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"<C-v>\\\"],\\r\\n      \\\"after\\\": [\\\"\\\\\\\"\\\", \\\"+\\\", \\\"p\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"n\\\"],\\r\\n      \\\"after\\\": [\\\"c\\\", \\\"w\\\", \\\"<Esc>\\\", \\\"p\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"n\\\"]\\r\\n    }\\r\\n  ],\\r\\n  \\\"vim.visualModeKeyBindings\\\": [\\r\\n    {\\r\\n      \\\"before\\\": [\\\"<C-v>\\\"],\\r\\n      \\\"after\\\": [\\\"\\\\\\\"\\\", \\\"+\\\", \\\"p\\\"]\\r\\n    }\\r\\n  ],\\r\\n\\r\\n  \\\"vim.normalModeKeyBindingsNonRecursive\\\": [\\r\\n    // toggle between split tab  shift\\r\\n    { \\\"before\\\": [\\\"shift\\\", \\\"tab\\\"], \\\"commands\\\": [\\\"workbench.action.nextEditor\\\"] },\\r\\n\\r\\n    {\\r\\n      \\\"before\\\": [\\\"J\\\"],\\r\\n      \\\"after\\\": [\\\"5\\\", \\\"j\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"K\\\"],\\r\\n      \\\"after\\\": [\\\"5\\\", \\\"k\\\"]\\r\\n    },\\r\\n\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"d\\\", \\\"q\\\"],\\r\\n      \\\"after\\\": [\\\"d\\\", \\\"t\\\", \\\"\\\\\\\"\\\", \\\"p\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"d\\\", \\\"b\\\"],\\r\\n      \\\"after\\\": [\\\"d\\\", \\\"i\\\", \\\"b\\\"]\\r\\n    },\\r\\n\\r\\n    //editor.action.peekDefinition\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"v\\\"],\\r\\n      \\\"commands\\\": [\\\"editor.action.peekDefinition\\\"]\\r\\n    },\\r\\n    //delete all file content\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"leader\\\", \\\"d\\\"],\\r\\n      \\\"after\\\": [\\\"g\\\", \\\"g\\\", \\\"c\\\", \\\"G\\\"]\\r\\n    },\\r\\n\\r\\n    {\\r\\n      \\\"before\\\": [\\\"c\\\"],\\r\\n      \\\"after\\\": [\\\"\\\\\\\"\\\", \\\"_\\\", \\\"c\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"C\\\"],\\r\\n      \\\"after\\\": [\\\"\\\\\\\"\\\", \\\"_\\\", \\\"C\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"c\\\", \\\"c\\\"],\\r\\n      \\\"after\\\": [\\\"\\\\\\\"\\\", \\\"_\\\", \\\"c\\\", \\\"c\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"x\\\"],\\r\\n      \\\"after\\\": [\\\"\\\\\\\"\\\", \\\"_\\\", \\\"x\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"X\\\"],\\r\\n      \\\"after\\\": [\\\"\\\\\\\"\\\", \\\"_\\\", \\\"X\\\"]\\r\\n    },\\r\\n\\r\\n    {\\r\\n      \\\"before\\\": [\\\"s\\\"],\\r\\n\\r\\n      \\\"after\\\": [\\\"leader\\\", \\\"leader\\\", \\\"s\\\"]\\r\\n    },\\r\\n\\r\\n    {\\r\\n      \\\"before\\\": [\\\"m\\\"],\\r\\n      \\\"after\\\": [\\\"*\\\"]\\r\\n    },\\r\\n\\r\\n    { \\\"before\\\": [\\\"leader\\\", \\\"e\\\"], \\\"after\\\": [\\\"$\\\"] },\\r\\n\\r\\n    { \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"a\\\"], \\\"after\\\": [\\\"v\\\", \\\"f\\\", \\\"{\\\", \\\"%\\\"] },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"r\\\"],\\r\\n      \\\"commands\\\": [\\\"workbench.action.findInFiles\\\"]\\r\\n    },\\r\\n    { \\\"before\\\": [\\\"leader\\\", \\\"f\\\"], \\\"commands\\\": [\\\"actions.find\\\"] },\\r\\n\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"d\\\"],\\r\\n      \\\"commands\\\": [\\\"editor.action.revealDefinition\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"{\\\"],\\r\\n      \\\"after\\\": [\\\"v\\\", \\\"f\\\", \\\"{\\\", \\\"%\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"c\\\"],\\r\\n      \\\"after\\\": [\\\"c\\\", \\\"$\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"s\\\"],\\r\\n      \\\"after\\\": [\\\"v\\\", \\\"i\\\"]\\r\\n    },\\r\\n\\r\\n    // same but for backtick we need to escape it\\r\\n\\r\\n    {\\r\\n      \\\"before\\\": [\\\"f\\\", \\\"f\\\"],\\r\\n      \\\"commands\\\": [\\\"fuzzySearch.activeTextEditor\\\"]\\r\\n    },\\r\\n\\r\\n    {\\r\\n      \\\"before\\\": [\\\"U\\\"],\\r\\n      \\\"after\\\": [\\\"C-r\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"o\\\", \\\"p\\\"],\\r\\n      \\\"commands\\\": [\\\"workbench.action.quickOpen\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"t\\\"],\\r\\n      \\\"after\\\": [\\\"d\\\", \\\"t\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"f\\\"],\\r\\n      \\\"after\\\": [\\\"d\\\", \\\"f\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"d\\\"],\\r\\n      \\\"after\\\": [\\\"d\\\", \\\"$\\\"]\\r\\n    },\\r\\n    //open files search\\r\\n\\r\\n    {\\r\\n      \\\"before\\\": [\\\"<leader>\\\", \\\"o\\\", \\\"g\\\"],\\r\\n      \\\"commands\\\": [\\\"workbench.action.showAllSymbols\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"<leader>\\\", \\\"<leader>\\\", \\\"<leader>\\\"],\\r\\n      \\\"commands\\\": [\\\"workbench.action.quickOpen\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"<leader>\\\", \\\"s\\\", \\\"r\\\"],\\r\\n      \\\"commands\\\": [\\\"workbench.action.splitEditorRight\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"<leader>\\\", \\\"h\\\"],\\r\\n      \\\"commands\\\": [\\\"workbench.action.focusLeftGroup\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"<leader>\\\", \\\"j\\\"],\\r\\n      \\\"commands\\\": [\\\"workbench.action.focusBelowGroup\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"<leader>\\\", \\\"k\\\"],\\r\\n      \\\"commands\\\": [\\\"workbench.action.focusAboveGroup\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"<leader>\\\", \\\"l\\\"],\\r\\n      \\\"commands\\\": [\\\"workbench.action.focusRightGroup\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"o\\\", \\\"g\\\"],\\r\\n      \\\"commands\\\": [\\\"workbench.action.showAllSymbols\\\"]\\r\\n    },\\r\\n\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"c\\\", \\\"a\\\"],\\r\\n      \\\"commands\\\": [\\\"workbench.action.closeAllGroups\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"p\\\", \\\"p\\\"],\\r\\n      \\\"commands\\\": [\\\"editor.action.showDefinitionPreviewHover\\\"]\\r\\n    },\\r\\n\\r\\n    //split down\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"s\\\", \\\"d\\\", \\\"d\\\"],\\r\\n      \\\"commands\\\": [\\\"workbench.action.splitEditorDown\\\"]\\r\\n    },\\r\\n    //copy below cureent line\\r\\n    { \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"p\\\"], \\\"after\\\": [\\\"o\\\", \\\"<Esc>\\\", \\\"p\\\"] },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"c\\\", \\\"c\\\"],\\r\\n      \\\"commands\\\": [\\\"git.checkout\\\"]\\r\\n    },\\r\\n    //replace current line with copy line\\r\\n    { \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"r\\\"], \\\"after\\\": [\\\"c\\\", \\\"c\\\", \\\"<Esc>\\\", \\\"p\\\"] },\\r\\n\\r\\n    //open breadCrumb\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"b\\\"],\\r\\n      \\\"commands\\\": [\\\"breadcrumbs.focus\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"leader\\\", \\\"leader\\\", \\\"o\\\"],\\r\\n      \\\"commands\\\": [\\\"editor.action.transformToUppercase\\\"]\\r\\n    }\\r\\n  ],\\r\\n  \\\"vim.visualModeKeyBindingsNonRecursive\\\": [\\r\\n    {\\r\\n      \\\"before\\\": [\\\"c\\\"],\\r\\n      \\\"after\\\": [\\\"\\\\\\\"\\\", \\\"_\\\", \\\"c\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"x\\\"],\\r\\n      \\\"after\\\": [\\\"\\\\\\\"\\\", \\\"_\\\", \\\"x\\\"]\\r\\n    },\\r\\n    {\\r\\n      \\\"before\\\": [\\\"<leader>\\\", \\\".\\\"],\\r\\n      \\\"after\\\": [\\\"J\\\"]\\r\\n    }\\r\\n\\r\\n    // checkout to new branch\\r\\n  ],\\r\\n  \\\"vim.insertModeKeyBindings\\\": [\\r\\n    {\\r\\n      \\\"before\\\": [\\\"j\\\", \\\"k\\\"],\\r\\n      \\\"after\\\": [\\\"<Esc>\\\"]\\r\\n    }\\r\\n  ],\\r\\n\\r\\n  \\\"security.workspace.trust.untrustedFiles\\\": \\\"open\\\",\\r\\n  \\\"json.schemas\\\": [],\\r\\n  \\\"zenMode.hideLineNumbers\\\": false,\\r\\n  \\\"javascript.updateImportsOnFileMove.enabled\\\": \\\"always\\\",\\r\\n  \\\"editor.fontSize\\\": 12,\\r\\n  \\\"diffEditor.originalEditable\\\": true,\\r\\n  \\\"gitlens.advanced.externalDirectoryDiffTool\\\": \\\"\\\",\\r\\n  \\\"atlascode.jira.lastCreateSiteAndProject\\\": {\\r\\n    \\\"siteId\\\": \\\"f6fe748a-274c-42d6-a701-eeb20cb6d0a7\\\",\\r\\n    \\\"projectKey\\\": \\\"\\\"\\r\\n  },\\r\\n  \\\"gitlens.views.searchAndCompare.files.layout\\\": \\\"list\\\",\\r\\n  \\\"vsicons.dontShowNewVersionMessage\\\": true,\\r\\n  \\\"editor.fontLigatures\\\": true,\\r\\n  \\\"cSpell.userWords\\\": [\\\"Cmms\\\", \\\"CONSTS\\\", \\\"Covid\\\", \\\"medigate\\\", \\\"medimizer\\\"],\\r\\n  \\\"autoimport.filesToScan\\\": \\\"**/*.{ts,tsx,js}\\\",\\r\\n  \\\"autoimport.showNotifications\\\": true,\\r\\n  \\\"redhat.telemetry.enabled\\\": true,\\r\\n  \\\"vscode-neovim.neovimExecutablePaths.win32\\\": \\\"C:\\\\\\\\tools\\\\\\\\neovim\\\\\\\\Neovim\\\\\\\\bin\\\",\\r\\n  \\\"git.confirmSync\\\": false,\\r\\n  \\\"js/ts.implicitProjectConfig.checkJs\\\": true,\\r\\n  \\\"editor.inlineSuggest.enabled\\\": true,\\r\\n  \\\"github.copilot.enable\\\": {\\r\\n    \\\"*\\\": true,\\r\\n    \\\"yaml\\\": false,\\r\\n    \\\"plaintext\\\": false,\\r\\n    \\\"markdown\\\": false,\\r\\n    \\\"javascript\\\": true\\r\\n  },\\r\\n  \\\"workbench.editor.enablePreview\\\": false,\\r\\n  \\\"vim.easymotion\\\": true,\\r\\n  \\\"glassit.alpha\\\": 1,\\r\\n  \\\"git.ignoreRebaseWarning\\\": true,\\r\\n  \\\"githubPullRequests.fileListLayout\\\": \\\"flat\\\",\\r\\n\\r\\n  \\\"whichkey.bindingOverrides\\\": [\\r\\n    {\\r\\n      \\\"keys\\\": \\\"f.f\\\",\\r\\n      \\\"name\\\": \\\"Go to line\\\",\\r\\n      \\\"type\\\": \\\"command\\\",\\r\\n      \\\"command\\\": \\\"actions.find\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"keys\\\": \\\"r.r\\\",\\r\\n      \\\"name\\\": \\\"reload\\\",\\r\\n      \\\"type\\\": \\\"command\\\",\\r\\n      \\\"command\\\": \\\"workbench.action.debug.restart\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"keys\\\": \\\"t.t.a\\\",\\r\\n      \\\"name\\\": \\\"srutn wit\\\",\\r\\n      \\\"type\\\": \\\"command\\\",\\r\\n      \\\"command\\\": \\\"surround.with.Trans\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"keys\\\": \\\"t.f\\\",\\r\\n      \\\"name\\\": \\\" tfunc\\\",\\r\\n      \\\"type\\\": \\\"command\\\",\\r\\n      \\\"command\\\": \\\"surround.with.Tfunc\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"keys\\\": \\\"t.t.t\\\",\\r\\n      \\\"name\\\": \\\" tot\\\",\\r\\n      \\\"type\\\": \\\"command\\\",\\r\\n      \\\"command\\\": \\\"surround.with.tTot\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"keys\\\": \\\"t.c\\\",\\r\\n      \\\"name\\\": \\\" surround with brackets\\\",\\r\\n      \\\"type\\\": \\\"command\\\",\\r\\n      \\\"command\\\": \\\"surround.with.brackets\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"key\\\": \\\"ctrl+k\\\",\\r\\n      \\\"command\\\": \\\"selectPrevSuggestion\\\",\\r\\n      \\\"when\\\": \\\"suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"key\\\": \\\"ctrl+j\\\",\\r\\n      \\\"command\\\": \\\"selectNextSuggestion\\\",\\r\\n      \\\"when\\\": \\\"suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"key\\\": \\\"ctrl+alt+b\\\",\\r\\n      \\\"command\\\": \\\"editor.action.insertSnippet\\\",\\r\\n      \\\"when\\\": \\\"editorTextFocus\\\",\\r\\n      \\\"args\\\": {\\r\\n        \\\"name\\\": \\\"bsup\\\"\\r\\n      }\\r\\n    }\\r\\n  ],\\r\\n  \\\"eslint.probe\\\": [\\\"javascript\\\", \\\"javascriptreact\\\", \\\"html\\\", \\\"vue\\\", \\\"markdown\\\"],\\r\\n  \\\"eslint.quiet\\\": true,\\r\\n  \\\"eslint.run\\\": \\\"onSave\\\",\\r\\n  \\\"githubPullRequests.createOnPublishBranch\\\": \\\"never\\\",\\r\\n\\r\\n  \\\"surround.custom\\\": {\\r\\n    \\\"trs\\\": {\\r\\n      \\\"label\\\": \\\"ts\\\",\\r\\n      \\\"description\\\": \\\"Wrap text and out put inside an Trans \\\",\\r\\n      \\\"disabled\\\": false,\\r\\n      \\\"snippet\\\": \\\"<Trans>$TM_SELECTED_TEXT</Trans>\\\"\\r\\n    },\\r\\n    \\\"tss\\\": {\\r\\n      \\\"label\\\": \\\"ttt\\\",\\r\\n      \\\"description\\\": \\\"Wrap text and out put inside an t function \\\",\\r\\n      \\\"disabled\\\": false,\\r\\n      \\\"snippet\\\": \\\"t`$TM_SELECTED_TEXT.`\\\"\\r\\n    },\\r\\n\\r\\n    \\\"Tfunc\\\": {\\r\\n      \\\"label\\\": \\\"tf\\\",\\r\\n      \\\"description\\\": \\\"Wrap text and out put inside an t function \\\",\\r\\n      \\\"disabled\\\": false,\\r\\n      \\\"snippet\\\": \\\"t({ message:$TM_SELECTED_TEXT  })\\\"\\r\\n    },\\r\\n    \\\"tTot\\\": {\\r\\n      \\\"label\\\": \\\"tot\\\",\\r\\n      \\\"description\\\": \\\"Wrap text and out put inside an t string \\\",\\r\\n      \\\"disabled\\\": false,\\r\\n      \\\"snippet\\\": \\\"t`$TM_SELECTED_TEXT`\\\"\\r\\n    },\\r\\n    \\\"defMsg\\\": {\\r\\n      \\\"label\\\": \\\"defMsg\\\",\\r\\n      \\\"description\\\": \\\"Wrap text and out put inside an defMsg\\\",\\r\\n      \\\"disabled\\\": false,\\r\\n      \\\"snippet\\\": \\\"defineMessag({message:$TM_SELECTED_TEXT, id:\\\\\\\"i18nId.$1\\\\\\\" })\\\"\\r\\n    },\\r\\n    \\\"brackets\\\": {\\r\\n      \\\"label\\\": \\\"brackets\\\",\\r\\n      \\\"description\\\": \\\"Wrap text and out put inside an brackets\\\",\\r\\n      \\\"disabled\\\": false,\\r\\n      \\\"snippet\\\": \\\"{$TM_SELECTED_TEXT.}\\\"\\r\\n    }\\r\\n\\r\\n    // You can add more ...\\r\\n  },\\r\\n  \\\"surround.with.forEachAsync\\\": {\\r\\n    \\\"label\\\": \\\"forEachAsync\\\",\\r\\n    \\\"description\\\": \\\"items.forEach(async (item) => { ... })\\\",\\r\\n    \\\"disabled\\\": false,\\r\\n    \\\"snippet\\\": \\\"${1:items}.forEach(async (${2:item}) => {\\\\n\\\\t$TM_SELECTED_TEXT\\\\n})$0\\\"\\r\\n  },\\r\\n  \\\"surround.with.tryFinally\\\": {\\r\\n    \\\"label\\\": \\\"try/finally\\\",\\r\\n    \\\"description\\\": \\\"try { ... } finally { $finalBlock }\\\",\\r\\n    \\\"disabled\\\": false,\\r\\n    \\\"snippet\\\": \\\"try {\\\\n\\\\t$TM_SELECTED_TEXT\\\\n} finally {\\\\n\\\\t$1\\\\n}$0\\\"\\r\\n  },\\r\\n  \\\"surround.with.comment\\\": {\\r\\n    \\\"label\\\": \\\"comment\\\",\\r\\n    \\\"description\\\": \\\"/** ...  */\\\",\\r\\n    \\\"disabled\\\": false,\\r\\n    \\\"snippet\\\": \\\"/**\\\\n\\\\t$TM_SELECTED_TEXT\\\\n*/$0\\\"\\r\\n  },\\r\\n  \\\"typescript.format.enable\\\": false,\\r\\n  \\\"typescript.tsserver.watchOptions\\\": {},\\r\\n  \\\"gitlens.defaultDateLocale\\\": null,\\r\\n  \\\"diffEditor.ignoreTrimWhitespace\\\": false,\\r\\n  \\\"editor.fontFamily\\\": \\\"\\\\\\\"OpenDyslexicMono\\\\\\\"\\\",\\r\\n  \\\"settingsSync.ignoredSettings\\\": [],\\r\\n  \\\"git.autofetch\\\": true,\\r\\n  \\\"typescript.updateImportsOnFileMove.enabled\\\": \\\"always\\\",\\r\\n  \\\"zeplin.preferredApplicationType\\\": \\\"App\\\",\\r\\n  \\\"githubPullRequests.pullBranch\\\": \\\"never\\\",\\r\\n  \\\"workbench.iconTheme\\\": \\\"vscode-icons\\\",\\r\\n  \\\"workbench.colorTheme\\\": \\\"Vim Dark Soft\\\",\\r\\n  \\\"vsnotes.defaultNotePath\\\": \\\"~/ n/\\\",\\r\\n  \\\"searchEverywhere.shouldDisplayNotificationInStatusBar\\\": true,\\r\\n  \\\"explorer.confirmDelete\\\": false,\\r\\n  \\\"[python]\\\": {\\r\\n    \\\"editor.formatOnType\\\": true\\r\\n  },\\r\\n  \\\"debug.focusEditorOnBreak\\\": false,\\r\\n  \\\"debug.focusWindowOnBreak\\\": false,\\r\\n  \\\"gitlens.currentLine.enabled\\\": false,\\r\\n  \\\"debug.javascript.terminalOptions\\\": {},\\r\\n  \\\"editor.accessibilitySupport\\\": \\\"off\\\",\\r\\n  \\\"files.autoSave\\\": \\\"off\\\",\\r\\n  \\\"chatgpt.apiKey\\\": \\\"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\\\",\\r\\n  \\\"gitlens.ai.experimental.provider\\\": \\\"openai\\\",\\r\\n  \\\"gitlens.ai.experimental.openai.model\\\": \\\"gpt-4\\\",\\r\\n  \\\"window.title\\\": \\\"${dirty}${activeEditorShort}${separator}${rootName}\\\",\\r\\n  \\\"workbench.startupEditor\\\": \\\"none\\\",\\r\\n  \\\"prettier.configPath\\\": \\\"./src/prettier.config.mjs\\\",\\r\\n  \\\"prettier.ignorePath\\\": \\\"src/.prettierignore\\\",\\r\\n  \\\"editor.stickyScroll.enabled\\\": true,\\r\\n  \\\"task.allowAutomaticTasks\\\": \\\"on\\\",\\r\\n  \\\"github.copilot.editor.enableAutoCompletions\\\": true\\r\\n}\"}"}}